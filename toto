--------------------------------------------------------------------------------
Profile data file 'callgrind.out.774380' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 1368953785
Trigger: Program termination
Profiled target:  ./ft_ls -R /usr (PID 774380, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                     
--------------------------------------------------------------------------------
7,200,765,373 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                      file:function
--------------------------------------------------------------------------------
1,075,847,136 (14.94%)  ???:ft_memset [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  875,564,373 (12.16%)  ./stdio-common/./stdio-common/vfprintf-internal.c:__vfprintf_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
  572,944,655 ( 7.96%)  ./libio/./libio/genops.c:_IO_default_xsputn [/usr/lib/x86_64-linux-gnu/libc.so.6]
  435,382,812 ( 6.05%)  ???:ft_strcpy [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  422,190,317 ( 5.86%)  ???:ft_strlen [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  240,423,456 ( 3.34%)  ./stdlib/./stdlib/getenv.c:getenv [/usr/lib/x86_64-linux-gnu/libc.so.6]
  204,602,198 ( 2.84%)  ???:ft_strncmp [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  180,862,725 ( 2.51%)  ./malloc/./malloc/malloc.c:_int_free [/usr/lib/x86_64-linux-gnu/libc.so.6]
  178,130,592 ( 2.47%)  ./malloc/./malloc/malloc.c:_int_malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
  169,733,400 ( 2.36%)  src/mandatory_strcmp.c:ls_strcmp [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  162,426,852 ( 2.26%)  ./time/./time/offtime.c:__offtime [/usr/lib/x86_64-linux-gnu/libc.so.6]
  140,905,530 ( 1.96%)  ./stdio-common/./stdio-common/_itoa.c:_itoa_word [/usr/lib/x86_64-linux-gnu/libc.so.6]
  138,833,181 ( 1.93%)  ???:ft_buffercpy [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  107,777,142 ( 1.50%)  ./time/./time/tzset.c:__tzstring [/usr/lib/x86_64-linux-gnu/libc.so.6]
  103,630,800 ( 1.44%)  ???:ft_bufferncpy [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
  102,272,057 ( 1.42%)  ./malloc/./malloc/malloc.c:malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
   96,934,656 ( 1.35%)  ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S:__strchrnul_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   94,384,670 ( 1.31%)  ./string/../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:__memcmp_avx2_movbe [/usr/lib/x86_64-linux-gnu/libc.so.6]
   88,683,725 ( 1.23%)  ./time/./time/tzfile.c:__tzfile_compute [/usr/lib/x86_64-linux-gnu/libc.so.6]
   83,972,888 ( 1.17%)  ???:ft_pathdup [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   80,388,160 ( 1.12%)  ???:get_int_value [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   66,951,382 ( 0.93%)  src/mergesort.c:merge [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   63,286,405 ( 0.88%)  src/recent.c:getMonth [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   55,685,066 ( 0.77%)  ./malloc/./malloc/malloc.c:free [/usr/lib/x86_64-linux-gnu/libc.so.6]
   50,380,512 ( 0.70%)  ./stdio-common/../libio/libioP.h:__vfprintf_internal
   50,380,512 ( 0.70%)  ./stdio-common/./stdio-common/printf-parse.h:__vfprintf_internal
   44,748,719 ( 0.62%)  ./malloc/./malloc/malloc.c:malloc_consolidate [/usr/lib/x86_64-linux-gnu/libc.so.6]
   40,072,585 ( 0.56%)  src/loadformat.c:load_format_data [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   39,539,136 ( 0.55%)  ./time/./time/tzset.c:__tz_convert [/usr/lib/x86_64-linux-gnu/libc.so.6]
   37,691,936 ( 0.52%)  ???:chop_nbr_dec [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   37,628,709 ( 0.52%)  ./time/./time/tzfile.c:__tzfile_read [/usr/lib/x86_64-linux-gnu/libc.so.6]
   37,484,900 ( 0.52%)  ./libio/./libio/iopadn.c:_IO_padn [/usr/lib/x86_64-linux-gnu/libc.so.6]
   36,350,496 ( 0.50%)  ./libio/./libio/vsnprintf.c:__vsnprintf_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
   35,713,006 ( 0.50%)  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strlen_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   31,000,457 ( 0.43%)  src/sorting.c:sort_by_func [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   30,610,944 ( 0.43%)  ./libio/./libio/strops.c:_IO_str_init_static_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
   29,828,572 ( 0.41%)  src/loadformat.c:set_max_size [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   28,697,760 ( 0.40%)  ./time/./time/asctime.c:asctime [/usr/lib/x86_64-linux-gnu/libc.so.6]
   27,737,251 ( 0.39%)  src/sorting.c:sort_by_name [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   27,557,625 ( 0.38%)  ./libio/./libio/libioP.h:_IO_default_xsputn
   27,037,564 ( 0.38%)  ???:skip_space [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   24,871,390 ( 0.35%)  ./time/./time/tzset.c:tzset_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
   24,716,129 ( 0.34%)  ./malloc/./malloc/malloc.c:unlink_chunk.constprop.0 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   24,502,370 ( 0.34%)  src/mergesort.c:merge_sort'2 [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   22,958,208 ( 0.32%)  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strnlen_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   22,321,389 ( 0.31%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
   20,810,784 ( 0.29%)  ???:ft_getlen_dec [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   19,131,664 ( 0.27%)  src/dictionnary.c:get_value_by_key [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   17,856,444 ( 0.25%)  src/stats.c:add_stats [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   17,666,959 ( 0.25%)  ./dirent/../sysdeps/unix/sysv/linux/readdir64.c:readdir [/usr/lib/x86_64-linux-gnu/libc.so.6]
   17,537,520 ( 0.24%)  src/printformat.c:print_format_data_short [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   15,305,527 ( 0.21%)  ./libio/./libio/genops.c:_IO_setb [/usr/lib/x86_64-linux-gnu/libc.so.6]
   15,305,472 ( 0.21%)  ./stdio-common/./stdio-common/snprintf.c:snprintf [/usr/lib/x86_64-linux-gnu/libc.so.6]
   14,772,627 ( 0.21%)  src/mergesort.c:append_remaining [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   14,667,774 ( 0.20%)  ./libio/./libio/genops.c:_IO_no_init [/usr/lib/x86_64-linux-gnu/libc.so.6]
   14,667,769 ( 0.20%)  ./libio/./libio/genops.c:_IO_old_init [/usr/lib/x86_64-linux-gnu/libc.so.6]
   14,176,050 ( 0.20%)  ???:ft_atoi [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   14,133,768 ( 0.20%)  ./csu/./csu/errno-loc.c:__errno_location [/usr/lib/x86_64-linux-gnu/libc.so.6]
   14,121,981 ( 0.20%)  src/dircontent.c:add_entry [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   13,392,330 ( 0.19%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strcmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
   13,073,457 ( 0.18%)  src/loadformat.c:format_mode_user [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   13,073,442 ( 0.18%)  src/loadformat.c:format_mode_group [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   13,073,425 ( 0.18%)  src/loadformat.c:format_mode_other [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   12,754,560 ( 0.18%)  ???:ft_pathjoin [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   12,435,735 ( 0.17%)  src/data.c:add_new_data [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   12,116,832 ( 0.17%)  ???:ft_itoa_dec [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   11,479,152 ( 0.16%)  ./string/./string/strdup.c:strdup [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
   11,244,415 ( 0.16%)  src/stats.c:get_type [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
   10,203,648 ( 0.14%)  ???:0x00000000048844d0 [???]
   10,130,466 ( 0.14%)  src/dircontent.c:get_dir_content [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,565,920 ( 0.13%)  src/loadformat.c:format_group [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,565,920 ( 0.13%)  src/loadformat.c:format_mode [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,565,920 ( 0.13%)  src/loadformat.c:format_user [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,547,191 ( 0.13%)  src/stats.c:add_xattr [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,450,700 ( 0.13%)  ???:skip_sign [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,366,762 ( 0.13%)  src/loadformat.c:format_time [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,157,824 ( 0.13%)  ???:ft_strdup [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    9,157,382 ( 0.13%)  src/loadformat.c:load_all_format_data [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    8,928,280 ( 0.12%)  ???:0x0000000004884520 [???]
    8,581,885 ( 0.12%)  src/recent.c:recent_month [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    8,290,490 ( 0.12%)  src/data.c:data_del [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    8,290,490 ( 0.12%)  src/data.c:new_data [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    8,290,464 ( 0.12%)  src/recent.c:recent [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    8,192,995 ( 0.11%)  ./io/../sysdeps/unix/sysv/linux/fstatat64.c:fstatat [/usr/lib/x86_64-linux-gnu/libc.so.6]
    7,971,604 ( 0.11%)  src/recent.c:get_now_string [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    7,425,550 ( 0.10%)  ???:get_sign [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    7,333,894 ( 0.10%)  src/data.c:add_data_path [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    7,088,343 ( 0.10%)  ./malloc/./malloc/arena.c:free
    7,015,382 ( 0.10%)  ???:ft_lstnew [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    7,015,184 ( 0.10%)  src/dictionnary.c:get_hash [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    7,015,012 ( 0.10%)  src/time.c:get_time_string [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,696,382 ( 0.09%)  src/ids.c:get_group_name [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,696,178 ( 0.09%)  src/ids.c:get_user_name [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,696,144 ( 0.09%)  src/loadformat.c:format_size [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,508,951 ( 0.09%)  ???:ft_malloc [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,377,280 ( 0.09%)  src/printformat.c:print_format_color [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,377,280 ( 0.09%)  src/recent.c:getYear [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    6,267,877 ( 0.09%)  ./libio/./libio/libioP.h:_IO_padn
    5,954,176 ( 0.08%)  src/printformat.c:print_all_format_data [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,739,570 ( 0.08%)  src/stats.c:set_type [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,739,552 ( 0.08%)  src/printformat.c:print_format_name [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,609,946 ( 0.08%)  ???:ft_lstadd_front [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,420,688 ( 0.08%)  src/loadformat.c:format_mode_type [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,420,688 ( 0.08%)  src/printformat.c:print_format_short_ending [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,283,615 ( 0.07%)  ???:ft_lstclear [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,101,858 ( 0.07%)  ???:0x0000000004884490 [???]
    5,101,824 ( 0.07%)  src/loadformat.c:format_major [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,101,824 ( 0.07%)  src/loadformat.c:format_minor [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    5,087,348 ( 0.07%)  src/keepentry.c:skip_dot [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,926,294 ( 0.07%)  src/recursion.c:recursive'2 [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,782,960 ( 0.07%)  src/loadformat.c:format_name [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,779,888 ( 0.07%)  src/loadformat.c:format_late_time [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,464,121 ( 0.06%)  src/loadformat.c:format_mode_xattr [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,464,096 ( 0.06%)  src/printformat.c:print_format_color_reset [/mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/ft_ls]
    4,010,352 ( 0.06%)  ./io/../sysdeps/unix/sysv/linux/stat64.c:stat [/usr/lib/x86_64-linux-gnu/libc.so.6]
    3,826,368 ( 0.05%)  ./time/./time/ctime.c:ctime [/usr/lib/x86_64-linux-gnu/libc.so.6]

--------------------------------------------------------------------------------
-- Auto-annotated source: src/dircontent.c
--------------------------------------------------------------------------------
Ir                 

-- line 10 ----------------------------------------
        .           /*                                                                            */
        .           /* ************************************************************************** */
        .           
        .           #include "ft_ls.h"
        .           
        .           static int add_entry(t_strategies *strat, t_directory *dir, struct dirent *dir_entry);
        .           
        .           int get_dir_content(t_strategies *strat, t_directory *dir)
  166,715 ( 0.00%)  {
   33,343 ( 0.00%)  	int				ret = OK;
   33,343 ( 0.00%)  	struct dirent	*dir_entry = NULL;
        .           	
  100,029 ( 0.00%)  	errno = 0;
  133,372 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (33,343x)
  166,719 ( 0.00%)  	DIR	*dir_stream = opendir(dir->path);
85,569,790 ( 1.19%)  => ./dirent/../sysdeps/unix/sysv/linux/opendir.c:opendir (33,343x)
      661 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   66,686 ( 0.00%)  	if (dir_stream == NULL)
        .           	{
        .           		ft_putstr_fd("ls: cannot open directory '", 2);
        .           		ft_putstr_fd(dir->path, 2);
        .           		perror("'");
        .           		ret = MINOR_KO;
        .           	}
        .           	else
        .           	{
  419,501 ( 0.01%)  		while (true)
        .           		{
1,258,503 ( 0.02%)  			errno = 0;
1,678,004 ( 0.02%)  => ./csu/./csu/errno-loc.c:__errno_location (419,501x)
1,678,008 ( 0.02%)  			dir_entry = readdir(dir_stream);
18,267,637 ( 0.25%)  => ./dirent/../sysdeps/unix/sysv/linux/readdir64.c:readdir (419,501x)
      688 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  839,002 ( 0.01%)  			if (dir_entry == NULL)
   33,343 ( 0.00%)  				break;
2,384,242 ( 0.03%)  			if (strat->keepEntry(dir_entry))
5,087,348 ( 0.07%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/keepentry.c:skip_dot (386,158x)
        .           			{
1,594,320 ( 0.02%)  				ret = add_entry(strat, dir, dir_entry);
921,959,522 (12.80%)  => src/dircontent.c:add_entry (318,864x)
  637,728 ( 0.01%)  				if (ret == INTERNAL_KO)
        .           				{
        .           					break;
        .           				}
  318,864 ( 0.00%)  			}
        .           		}
  133,372 ( 0.00%)  		if (errno != 0 && ret == OK)
  133,372 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (33,343x)
        .           		{
        .           			ret = MAJOR_KO;
        .           			ft_putstr_fd("ls: cannot read directory '", 2);
        .           			ft_putstr_fd(dir->path, 2);
        .           			perror("'");
        .           		}
        .           	}
  100,033 ( 0.00%)  	closedir(dir_stream);
5,625,909 ( 0.08%)  => ./dirent/../sysdeps/unix/sysv/linux/closedir.c:closedir (33,343x)
      685 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  133,372 ( 0.00%)  	return (ret);
        .           }
        .                
        .           static int add_entry(t_strategies *strat, t_directory *dir, struct dirent *dir_entry)
1,913,184 ( 0.03%)  {
  318,864 ( 0.00%)  	int	ret = OK;
        .           
3,188,640 ( 0.04%)  	t_data*	data = add_new_data(&dir->content, dir_entry->d_name, dir->path, strat->addlist);
839,473,186 (11.66%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/data.c:add_new_data (318,864x)
  637,728 ( 0.01%)  	if (data == NULL)
        .           	{
        .           		return (INTERNAL_KO);
        .           	}
        .           
1,275,456 ( 0.02%)  	++dir->entry_nb;
        .           
1,275,456 ( 0.02%)  	ret = add_stats(strat, data);
38,788,877 ( 0.54%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/stats.c:add_stats (318,864x)
  637,728 ( 0.01%)  	if (ret != OK)
        .           	{
        .           		return (ret);
        .           	}
        .           
1,275,456 ( 0.02%)  	ret = compute_stats(strat, data);
19,590,307 ( 0.27%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/stats.c:compute_stats (318,864x)
        .           
1,594,320 ( 0.02%)  	if (ret == OK && data->file.type == LNK)
        .           	{
   91,965 ( 0.00%)  		ret = add_symlink(data);
9,985,171 ( 0.14%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/stats.c:add_symlink (30,655x)
        .           	}
        .           
  637,728 ( 0.01%)  	return (ret);
1,275,456 ( 0.02%)  }

   33,343 ( 0.00%)  <counts for unidentified lines in src/dircontent.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/mergesort.c
--------------------------------------------------------------------------------
Ir                  

-- line 12 ----------------------------------------
         .           
         .           #include "ft_ls.h"
         .           
         .           static t_list 			*merge(t_list *l_lst, t_list *r_lst, unsigned int l_len, unsigned int r_len, bool(*ordered)(t_data *a, t_data *b));
         .           static inline t_list	*append_remaining(t_list **dest, t_list *src, unsigned int src_len);
         .           
         .           
         .           t_list *merge_sort(t_list *lst, unsigned int len, bool(*ordered)(t_data *a, t_data *b))
 3,836,976 ( 0.05%)  {
 1,897,010 ( 0.03%)  	if (len < 2 || ordered == NULL)
         .           	{
 1,059,279 ( 0.01%)  		return lst;
         .           	}
   859,209 ( 0.01%)  	unsigned int	l_len = len / 2;
   859,209 ( 0.01%)  	unsigned int	r_len = len - l_len;
         .           
   572,806 ( 0.01%)  	t_list	*l_lst = lst;
   572,806 ( 0.01%)  	t_list	*r_lst = lst;
 7,796,662 ( 0.11%)  	for (unsigned int i = 0; i < l_len; ++i)
         .           	{
 2,850,450 ( 0.04%)  		r_lst = r_lst->next;
         .           	}
         .           	
 1,432,015 ( 0.02%)  	l_lst = merge_sort(l_lst, l_len, ordered);
135,386,123 ( 1.88%)  => src/mergesort.c:merge_sort'2 (22,606x)
 1,432,015 ( 0.02%)  	r_lst = merge_sort(r_lst, r_len, ordered);
139,111,901 ( 1.93%)  => src/mergesort.c:merge_sort'2 (22,606x)
         .           
 2,004,821 ( 0.03%)  	return merge(l_lst, r_lst, l_len, r_len, ordered);
60,199,463 ( 0.84%)  => src/mergesort.c:merge (22,606x)
 2,557,984 ( 0.04%)  }
         .           
         .           static t_list *merge(t_list *l_lst, t_list *r_lst, unsigned int l_len, unsigned int r_len, bool(*ordered)(t_data *a, t_data *b))
 2,291,224 ( 0.03%)  {
   286,403 ( 0.00%)  	t_list	*merged = NULL;
   286,403 ( 0.00%)  	t_list	*current = NULL;
   286,403 ( 0.00%)  	t_list	*next	= NULL;
         .           
18,714,829 ( 0.26%)  	while (l_len && r_len)
         .           	{
13,891,052 ( 0.19%)  		if (sort_by_func(l_lst->content, r_lst->content, ordered))
228,471,108 ( 3.17%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/sorting.c:sort_by_func (1,631,603x)
         .           		{
 1,586,750 ( 0.02%)  			next = l_lst;
 2,380,125 ( 0.03%)  			l_lst = l_lst->next;
 2,380,125 ( 0.03%)  			--l_len;
   793,375 ( 0.01%)  		}
         .           		else
         .           		{
 1,676,456 ( 0.02%)  			next = r_lst;
 2,514,684 ( 0.03%)  			r_lst = r_lst->next;
 2,514,684 ( 0.03%)  			--r_len;
         .           		}
 3,263,206 ( 0.05%)  		if (merged == NULL)
         .           		{
   572,806 ( 0.01%)  			merged = next;
   286,403 ( 0.00%)  		}
         .           		else
         .           		{
 4,035,600 ( 0.06%)  			current->next = next;
         .           		}
 3,263,206 ( 0.05%)  		current = next;
         .           	}
 1,432,015 ( 0.02%)  	current = append_remaining(&current, l_lst, l_len);
 6,961,220 ( 0.10%)  => src/mergesort.c:append_remaining (286,403x)
 1,432,015 ( 0.02%)  	current = append_remaining(&current, r_lst, r_len);
 7,811,407 ( 0.11%)  => src/mergesort.c:append_remaining (286,403x)
         .           	
 1,145,612 ( 0.02%)  	return (merged);
         .           }
         .           
         .           static inline t_list	*append_remaining(t_list **dest, t_list *src, unsigned int src_len)
 2,864,030 ( 0.04%)  {
 1,718,418 ( 0.02%)  	t_list *current = *dest;
         .           
 2,236,295 ( 0.03%)  	while (src_len)
         .           	{
   727,122 ( 0.01%)  		if (current == NULL)
         .           		{
         .           			*dest = src;
         .           		}
         .           		else
         .           		{
 1,090,683 ( 0.02%)  			current->next = src;
         .           		}
 1,090,683 ( 0.02%)  		current = current->next;
 1,090,683 ( 0.02%)  		src = src->next;
 1,090,683 ( 0.02%)  		--src_len;
         .           	}
 1,145,612 ( 0.02%)  	current->next = NULL;
 1,718,418 ( 0.02%)  	return (current);
         .           }

 1,918,006 ( 0.03%)  <counts for unidentified lines in src/mergesort.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/dictionnary.c
--------------------------------------------------------------------------------
Ir                 

-- line 11 ----------------------------------------
        .           /* ************************************************************************** */
        .           
        .           #include "ft_ls.h"
        .           
        .           static inline unsigned int	get_hash(unsigned int key);
        .           static void					del_ids(void *ids);
        .           
        .           int insert_key(t_list *dict[HASH_SIZE], unsigned int key, char *value)
       96 ( 0.00%)  {
       48 ( 0.00%)  	unsigned int	hash = get_hash(key);
      176 ( 0.00%)  => src/dictionnary.c:get_hash (16x)
       48 ( 0.00%)  	t_id			*newid = ft_malloc(sizeof(t_id));
    3,696 ( 0.00%)  => ???:ft_malloc (16x)
        .           
       32 ( 0.00%)  	if (newid == NULL)
        .           	{
        .           		return (INTERNAL_KO);
        .           	}
        .           
       48 ( 0.00%)  	newid->id = key;
       48 ( 0.00%)  	newid->value = value;
        .           
       48 ( 0.00%)  	t_list *newlst = ft_lstnew(newid);
    3,418 ( 0.00%)  => ???:ft_lstnew (16x)
       32 ( 0.00%)  	if (newlst == NULL)
        .           	{
        .           		free(newid);
        .           		return (INTERNAL_KO);
        .           	}
       96 ( 0.00%)  	ft_lstadd_front(&dict[hash], newlst);
      224 ( 0.00%)  => ???:ft_lstadd_front (16x)
        .           
       16 ( 0.00%)  	return (OK);
       64 ( 0.00%)  }
        .           
        .           char* get_value_by_key(t_list * const dict[HASH_SIZE], unsigned int key)
3,188,640 ( 0.04%)  {
1,913,184 ( 0.03%)  	unsigned int	hash = get_hash(key);
7,015,008 ( 0.10%)  => src/dictionnary.c:get_hash (637,728x)
2,550,912 ( 0.04%)  	t_list const	*lst = dict[hash];
  637,728 ( 0.01%)  	char		 	*value = NULL;
        .           
1,275,456 ( 0.02%)  	while (lst)
        .           	{
1,913,136 ( 0.03%)  		t_id  *id = (t_id*)lst->content;
2,550,848 ( 0.04%)  		if (id->id == key)
        .           		{
1,913,136 ( 0.03%)  			value = id->value;
  637,712 ( 0.01%)  			break;
        .           		}
        .           		lst = lst->next;
        .           	}
        .           
2,550,912 ( 0.04%)  	return (value);
        .           }
        .           
        .           static inline unsigned int  get_hash(unsigned int key)
1,913,232 ( 0.03%)  {
2,550,976 ( 0.04%)  	unsigned int hash = HASH_A * key;
2,550,976 ( 0.04%)  	return (hash >> HASH_SHIFT);
        .           }
        .           
        .           void  init_dict(t_list *dict[HASH_SIZE])
        6 ( 0.00%)  {
    6,150 ( 0.00%)  	for (int i = 0; i < HASH_SIZE; ++i)
        .           	{
    3,072 ( 0.00%)  		dict[i] = NULL;
        .           	}
        4 ( 0.00%)  }
        .           
        .           void  free_dict(t_list *dict[HASH_SIZE])
        8 ( 0.00%)  {
    6,150 ( 0.00%)  	for (int i = 0; i < HASH_SIZE; ++i)
        .           	{
    4,096 ( 0.00%)  		if (dict[i] != NULL)
        .           		{
       96 ( 0.00%)  			ft_lstclear(&dict[i], del_ids);
    6,016 ( 0.00%)  => ???:ft_lstclear (16x)
        .           		}
    1,024 ( 0.00%)  	}
        6 ( 0.00%)  }
        .           
        .           static void  del_ids(void *ids)
       64 ( 0.00%)  {
       32 ( 0.00%)  	t_id *id = (t_id*)ids;
       64 ( 0.00%)  	free(id->value);
    1,760 ( 0.00%)  => ./malloc/./malloc/malloc.c:free (16x)
       48 ( 0.00%)  	free(id);
    1,760 ( 0.00%)  => ./malloc/./malloc/malloc.c:free (16x)
       48 ( 0.00%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/recent.c
--------------------------------------------------------------------------------
Ir                  

-- line 15 ----------------------------------------
         .           static char*	get_now_string();
         .           static int		recent_month(char *time_string, char *now_string, int year_offset);
         .           static int		recent_day(char *time_string, char *now_string);
         .           static int		getMonth(char *time);
         .           static int		getYear(char *time);
         .           static int		getDay(char *time);
         .           
         .           int	recent(char *time_string)
 1,275,456 ( 0.02%)  {
   637,728 ( 0.01%)  	char*	now_string = get_now_string();
1,526,359,399 (21.20%)  => src/recent.c:get_now_string (318,864x)
   637,728 ( 0.01%)  	if (now_string == NULL)
         .           	{
         .           		return (ERROR);
         .           	}
         .           
   956,592 ( 0.01%)  	int	time_year = getYear(time_string);
69,512,352 ( 0.97%)  => src/recent.c:getYear (318,864x)
   956,592 ( 0.01%)  	int	now_year = getYear(now_string);
69,512,352 ( 0.97%)  => src/recent.c:getYear (318,864x)
 1,913,184 ( 0.03%)  	int	recent = recent_month(time_string, now_string, now_year - time_year);
297,077,332 ( 4.13%)  => src/recent.c:recent_month (318,864x)
         .           
   637,728 ( 0.01%)  	return (recent);
 1,275,456 ( 0.02%)  }
         .           
         .           static char*	get_now_string()
   956,592 ( 0.01%)  {
   956,592 ( 0.01%)  	errno = 0;
 1,275,456 ( 0.02%)  => ./csu/./csu/errno-loc.c:__errno_location (318,864x)
 1,594,324 ( 0.02%)  	time_t	now = time(NULL);
 1,913,184 ( 0.03%)  => ./time/../sysdeps/unix/sysv/linux/time.c:time_syscall (318,864x)
       663 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   637,728 ( 0.01%)  	if (now == -1)
         .           	{
         .           		perror("ft_ls: time: ");
         .           		return (NULL);
         .           	}
         .           
 1,275,456 ( 0.02%)  	char	*now_string = ctime(&now);
1,515,198,492 (21.04%)  => ./time/./time/ctime.c:ctime (318,864x)
   637,728 ( 0.01%)  	if (now_string == NULL)
         .           	{
         .           		perror("ft_ls: ctime: ");
         .           	}
         .           
   637,728 ( 0.01%)  	return (now_string);
 1,275,456 ( 0.02%)  }
         .           
         .           static int	recent_month(char *time_string, char *now_string, int year_offset)
 1,913,184 ( 0.03%)  {
   318,864 ( 0.00%)  	int	recent = FALSE;
   956,592 ( 0.01%)  	int	time_month = getMonth(time_string);
135,242,013 ( 1.88%)  => src/recent.c:getMonth (318,864x)
   956,592 ( 0.01%)  	int	now_month = getMonth(now_string);
146,677,440 ( 2.04%)  => src/recent.c:getMonth (318,864x)
 1,594,320 ( 0.02%)  	int	month_ago = now_month - time_month + 12 * year_offset;
         .           
   637,728 ( 0.01%)  	if (month_ago < 6)
         .           	{
   102,087 ( 0.00%)  		recent = TRUE;
   102,087 ( 0.00%)  	}
   433,554 ( 0.01%)  	else if (month_ago == 6)
         .           	{
    74,644 ( 0.00%)  		recent = recent_day(time_string, now_string);
 6,575,994 ( 0.09%)  => src/recent.c:recent_day (18,661x)
         .           	}
         .           
 1,275,456 ( 0.02%)  	return (recent);
         .           }
         .           
         .           static int	recent_day(char *time_string, char *now_string)
    93,305 ( 0.00%)  {
    18,661 ( 0.00%)  	int	recent = FALSE;
    55,983 ( 0.00%)  	int	time_day = getDay(time_string);
 3,106,094 ( 0.04%)  => src/recent.c:getDay (18,661x)
    55,983 ( 0.00%)  	int	now_day = getDay(now_string);
 3,097,726 ( 0.04%)  => src/recent.c:getDay (18,661x)
         .           
    55,983 ( 0.00%)  	if (time_day >= now_day)
         .           	{
    17,615 ( 0.00%)  		recent = TRUE;
         .           	}
         .           
    74,644 ( 0.00%)  	return (recent);
         .           }
         .           
         .           static int	getMonth(char *time)
 2,550,912 ( 0.04%)  {
 3,188,644 ( 0.04%)  	char	*month[] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
14,030,016 ( 0.19%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (637,728x)
       834 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
         .             
20,340,282 ( 0.28%)  	for (int i = 0; i < 12; ++i)
         .           	{
29,671,288 ( 0.41%)  		if (ft_strncmp(&time[4], month[i], 3) == 0)
204,602,198 ( 2.84%)  => ???:ft_strncmp (3,708,911x)
         .           		{
 1,913,184 ( 0.03%)  			return (i);
         .           		}
 3,071,183 ( 0.04%)  	}
         .           
         .           	return (ERROR);
 2,550,912 ( 0.04%)  }
         .           
         .           static int	getYear(char *time)
 2,550,912 ( 0.04%)  {
 3,826,368 ( 0.05%)  	return (ft_atoi(&time[20]));
132,647,424 ( 1.84%)  => ???:ft_atoi (637,728x)
         .           }
         .           
         .           static int	getDay(char *time)
   149,288 ( 0.00%)  {
   223,932 ( 0.00%)  	return (ft_atoi(&time[8]));
 5,830,600 ( 0.08%)  => ???:ft_atoi (37,322x)
         .           }

   216,777 ( 0.00%)  <counts for unidentified lines in src/recent.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/sorting.c
--------------------------------------------------------------------------------
Ir                  

-- line 17 ----------------------------------------
         .           	(void)lst;
         .           	(void)lst_len;
         .           	(void)sorting;
         .           
         .           	return (lst);
         .           }
         .           
         .           bool	sort_by_func(void *a, void *b, bool(*compare)(t_data *data_a, t_data *data_b))
 9,789,618 ( 0.14%)  {
 3,263,206 ( 0.05%)  	t_data	*data_a = (t_data*)a;
 3,263,206 ( 0.05%)  	t_data	*data_b = (t_data*)b;
         .           
14,684,427 ( 0.20%)  	return (compare(data_a, data_b));
197,470,651 ( 2.74%)  => src/sorting.c:sort_by_name (1,631,603x)
         .           }
         .           
         .           bool	sort_by_name(t_data *a, t_data *b)
 8,158,015 ( 0.11%)  {
19,579,236 ( 0.27%)  	return (ls_strcmp(a->file.name, b->file.name) <= 0);
169,733,400 ( 2.36%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/mandatory_strcmp.c:ls_strcmp (1,631,603x)
         .           }
         .           
         .           bool  sort_by_name_reverse(t_data *a, t_data *b)
         .           {
         .           	return (ls_strcmp(a->file.name, b->file.name) >= 0);
         .           }
         .           
         .           bool	sort_by_time(t_data *a, t_data *b)
-- line 42 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: src/mandatory_strcmp.c
--------------------------------------------------------------------------------
Ir                   

-- line 9 ----------------------------------------
          .           /*   Updated: 2024/06/06 09:59:49 by rertzer          ###   ########.fr       */
          .           /*                                                                            */
          .           /* ************************************************************************** */
          .           
          .           #include "ft_ls.h"
          .           
          .           
          .           int	ls_strcmp(const char *s1, const char *s2)
  6,526,412 ( 0.09%)  {
          .           	size_t	i;
          .           
  1,631,603 ( 0.02%)  	i = 0;
125,378,563 ( 1.74%)  	while (s1[i] != '\0' && s1[i] == s2[i])
          .           	{
 14,910,594 ( 0.21%)  		++i;
          .           	}
 14,684,427 ( 0.20%)  	return ((unsigned char)s1[i] - (unsigned char)s2[i]);
          .           }

  6,601,801 ( 0.09%)  <counts for unidentified lines in src/mandatory_strcmp.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/keepentry.c
--------------------------------------------------------------------------------
Ir                 

-- line 15 ----------------------------------------
        .           bool  keep_all(struct dirent* entry)
        .           {
        .           	(void)entry;
        .           
        .           	return (true);
        .           }
        .           
        .           bool  skip_dot(struct dirent* entry)
1,158,474 ( 0.02%)  {
  386,158 ( 0.01%)  	bool	ret = true;
        .           
1,544,632 ( 0.02%)  	if (entry->d_name[0] == '.')
        .           	{
   67,294 ( 0.00%)  		ret = false;
        .           	}
        .           
1,930,790 ( 0.03%)  	return (ret);
        .           }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/recursion.c
--------------------------------------------------------------------------------
Ir                 

-- line 17 ----------------------------------------
        .           int	no_recursion(t_strategies *strat, t_directory *dir)
        .           {
        .           	(void)strat;
        .           	(void)dir;
        .           	return (OK);
        .           }
        .           
        .           int	recursive(t_strategies *strat, t_directory *dir)
  166,715 ( 0.00%)  {
  100,029 ( 0.00%)  	t_list	*lst = dir->content;
   33,343 ( 0.00%)  	int		ret = OK;
        .           
1,023,278 ( 0.01%)  	while (lst)
        .           	{
  956,592 ( 0.01%)  		t_data *data = (t_data*)lst->content;
1,123,302 ( 0.02%)  		if (data->file.type == DIREC && not_a_dot(data->file.name))
    1,068 ( 0.00%)  => src/recursion.c:not_a_dot (12x)
        .           		{
  133,368 ( 0.00%)  			char *path = ft_strdup(data->path);
    4,347 ( 0.00%)  => ???:ft_strdup (12x)
   66,684 ( 0.00%)  			if (path == NULL)
        .           			{
        .           				ret = INTERNAL_KO;
        .           				break;
        .           			}
        .           
  133,368 ( 0.00%)  			ret = list_path(strat, path);
7,200,315,520 (99.99%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/pathlisting.c:list_path'2 (12x)
   66,684 ( 0.00%)  			if (ret == INTERNAL_KO)
        .           			{
        .           				break;
        .           			}
   33,342 ( 0.00%)  		}
  956,592 ( 0.01%)  		lst = lst->next;
        .           	}
  133,372 ( 0.00%)  	return (ret);
        .           }
        .           
        .           static bool not_a_dot(char *name)
  133,368 ( 0.00%)  {
   33,342 ( 0.00%)  	bool	is_not = true;
        .           	
  333,420 ( 0.00%)  	if (!(ft_strcmp(name, ".") && ft_strcmp(name, "..")))
2,267,256 ( 0.03%)  => ???:ft_strcmp (66,684x)
        .           	{
        .           		is_not = false;
        .           	}
        .           	
  200,052 ( 0.00%)  	return (is_not);
        .           }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/time.c
--------------------------------------------------------------------------------
Ir                 

-- line 8 ----------------------------------------
        .           /*   Created: 2024/05/07 16:17:59 by rertzer           #+#    #+#             */
        .           /*   Updated: 2024/05/07 16:18:00 by rertzer          ###   ########.fr       */
        .           /*                                                                            */
        .           /* ************************************************************************** */
        .           
        .           #include "ft_ls.h"
        .           
        .           time_t  last_modif(struct stat *stat_buffer)
  956,595 ( 0.01%)  {
1,275,460 ( 0.02%)    return (stat_buffer->st_mtim.tv_sec);
        .           }
        .           
        .           time_t  access_time(struct stat *stat_buffer)
        .           {
        .             return (stat_buffer->st_atim.tv_sec);
        .           }
        .           
        .           char	*get_time_string(time_t *time)
1,275,456 ( 0.02%)  {
  956,592 ( 0.01%)  	errno = 0;
1,275,456 ( 0.02%)  => ./csu/./csu/errno-loc.c:__errno_location (318,864x)
        .           	
1,275,460 ( 0.02%)  	char  *tmp = ctime(time);
1,522,239,900 (21.14%)  => ./time/./time/ctime.c:ctime (318,864x)
      685 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  637,728 ( 0.01%)  	if (tmp == NULL)
        .           	{
        .           		perror("ft_ls: ctime: ");
        .           		return (NULL);
        .           	}
        .           
  956,592 ( 0.01%)  	char  *time_string = ft_strdup(tmp);
216,208,284 ( 3.00%)  => ???:ft_strdup (318,864x)
        .           
  637,728 ( 0.01%)  	return (time_string);
1,275,456 ( 0.02%)  }

--------------------------------------------------------------------------------
-- Auto-annotated source: src/loadformat.c
--------------------------------------------------------------------------------
Ir                  

-- line 30 ----------------------------------------
         .           static unsigned int			format_major(char *buffer, t_data *data);
         .           static unsigned int			format_time(char *buffer, t_data *data);
         .           static unsigned int			format_recent_time(char *buffer, char *time_string);
         .           static unsigned int			format_late_time(char *buffer, char *time_string);
         .           static void					format_symlink(char **buffer, t_data *data);
         .           static void					set_max_size(unsigned int *max, unsigned int size);
         .           
         .           int  load_all_format_data(t_strategies *strat, t_directory *dir, t_format_sizes *format_sizes, t_format_data * all_format_data)
   233,401 ( 0.00%)  {
    33,343 ( 0.00%)  	int		ret = OK;
    33,343 ( 0.00%)  	int		i = 0;
   100,029 ( 0.00%)  	t_list	*entry = dir->content;
         .           
 1,023,278 ( 0.01%)  	while (entry != NULL)
         .           	{
   956,592 ( 0.01%)  		t_data	*data = (t_data*)entry->content;
         .           
   956,592 ( 0.01%)  		load_block_size(dir, data);
 3,826,368 ( 0.05%)  => src/loadformat.c:load_block_size (318,864x)
 2,869,776 ( 0.04%)  		ret = load_format_data(strat, data, format_sizes, &all_format_data[i]);
4,222,699,562 (58.64%)  => src/loadformat.c:load_format_data (318,864x)
   637,728 ( 0.01%)  		if (ret == INTERNAL_KO)
         .           		{
         .           			break;
         .           		}
   956,592 ( 0.01%)  		entry = entry->next;
   956,592 ( 0.01%)  		++i;
         .           	}
   266,744 ( 0.00%)  	set_max_size(&format_sizes->size, format_sizes->minor + format_sizes->major + 2);
   336,640 ( 0.00%)  => src/loadformat.c:set_max_size (33,343x)
         .           
   133,372 ( 0.00%)  	return (ret);
         .           }
         .           
         .           static inline void	load_block_size(t_directory *dir, t_data *data)
 1,275,456 ( 0.02%)  {
 1,913,184 ( 0.03%)  	dir->total_block_size +=  data->block_nb / 2;
   637,728 ( 0.01%)  }
         .           
         .           static int	load_format_data(t_strategies *strat, t_data *data, t_format_sizes *format_sizes, t_format_data *format_data)
 2,232,048 ( 0.03%)  {
   318,864 ( 0.00%)  	int				ret = OK;
   318,864 ( 0.00%)  	unsigned int	size = 0;
         .           
   637,728 ( 0.01%)  	format_data->align_user_left = true;
   637,728 ( 0.01%)  	format_data->align_group_left = true;
 1,275,456 ( 0.02%)  	size = format_mode(format_data->mode, data);
58,671,053 ( 0.81%)  => src/loadformat.c:format_mode (318,864x)
   956,592 ( 0.01%)  	set_max_size(&format_sizes->mode, size);
 3,286,029 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           	
 1,594,320 ( 0.02%)  	size = format_links(format_data->links, data);
23,303,634 ( 0.32%)  => src/loadformat.c:format_links (318,864x)
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->links, size);
 3,286,863 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           	
 2,232,048 ( 0.03%)  	ret = format_user(strat, &format_data->user, &size, data);
43,053,163 ( 0.60%)  => src/loadformat.c:format_user (318,864x)
   637,728 ( 0.01%)  	if (ret == INTERNAL_KO)
         .           	{
         .           		return (ret);
         .           	}
   637,728 ( 0.01%)  	if (size == 0)
         .           	{
         .           		size = format_user_id(&format_data->user, data);
         .           		if (size == 0)
         .           		{
         .           			return (INTERNAL_KO);
         .           		}
         .           		format_data->align_user_left = false;
         .           	}
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->user, size);
 3,286,026 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           	
 2,232,048 ( 0.03%)  	ret = format_group(strat, &format_data->group, &size, data);
43,071,065 ( 0.60%)  => src/loadformat.c:format_group (318,864x)
   637,728 ( 0.01%)  	if (ret == INTERNAL_KO)
         .           	{
         .           		return (ret);
         .           	}
   637,728 ( 0.01%)  	if (size == 0)
         .           	{
         .           		size = format_group_id(&format_data->group, data);
         .           		if (size == 0)
         .           		{
         .           			return (INTERNAL_KO);
         .           		}
         .           		format_data->align_group_left = false;
         .           	}
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->group, size);
 3,286,047 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           
 1,594,320 ( 0.02%)  	size = format_size(format_data->size, data);
57,838,430 ( 0.80%)  => src/loadformat.c:format_size (318,864x)
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->size, size);
 3,320,040 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           	
 1,594,320 ( 0.02%)  	size = format_minor(format_data->minor, data);
 5,101,824 ( 0.07%)  => src/loadformat.c:format_minor (318,864x)
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->minor, size);
 3,188,640 ( 0.04%)  => src/loadformat.c:set_max_size (318,864x)
         .           	
 1,594,320 ( 0.02%)  	size = format_major(format_data->major, data);
 5,101,824 ( 0.07%)  => src/loadformat.c:format_major (318,864x)
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->major, size);
 3,188,640 ( 0.04%)  => src/loadformat.c:set_max_size (318,864x)
         .           
 1,594,320 ( 0.02%)  	size = format_time(format_data->date, data);
3,865,568,229 (53.68%)  => src/loadformat.c:format_time (318,864x)
   637,728 ( 0.01%)  	if (size == 0)
         .           	{
         .           		return (INTERNAL_KO);
         .           	}
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->date, size);
 3,286,023 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           
 1,594,320 ( 0.02%)  	size = format_name(&format_data->name, data);
45,091,512 ( 0.63%)  => src/loadformat.c:format_name (318,864x)
 1,275,456 ( 0.02%)  	set_max_size(&format_sizes->name, size);
 3,363,624 ( 0.05%)  => src/loadformat.c:set_max_size (318,864x)
         .           
 1,275,456 ( 0.02%)  	format_symlink(&format_data->target, data);
 3,188,640 ( 0.04%)  => src/loadformat.c:format_symlink (318,864x)
         .           
 1,913,184 ( 0.03%)  	strat->color(&format_data->color, &data->file);
 2,869,776 ( 0.04%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/color.c:no_color (318,864x)
   956,592 ( 0.01%)  	if (data->target.name != NULL)
         .           	{
   214,585 ( 0.00%)  		strat->color(&format_data->target_color, &data->target);
   275,895 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/color.c:no_color (30,655x)
         .           	}
         .           
   637,728 ( 0.01%)  	return (ret);
 1,275,456 ( 0.02%)  }
         .           
         .           static unsigned int	format_mode(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
   318,864 ( 0.00%)  	unsigned int	size = 10;
         .           
   956,592 ( 0.01%)  	format_mode_type(buffer, data);
 5,420,688 ( 0.08%)  => src/loadformat.c:format_mode_type (318,864x)
   956,592 ( 0.01%)  	format_mode_user(buffer, data);
13,073,457 ( 0.18%)  => src/loadformat.c:format_mode_user (318,864x)
   956,592 ( 0.01%)  	format_mode_group(buffer, data);
13,073,442 ( 0.18%)  => src/loadformat.c:format_mode_group (318,864x)
   956,592 ( 0.01%)  	format_mode_other(buffer, data);	
13,073,425 ( 0.18%)  => src/loadformat.c:format_mode_other (318,864x)
 1,594,320 ( 0.02%)  	size = format_mode_xattr(buffer, data, size);
 4,464,121 ( 0.06%)  => src/loadformat.c:format_mode_xattr (318,864x)
         .           	
   956,592 ( 0.01%)  	buffer[size] = '\0';
         .           
 1,275,456 ( 0.02%)  	return (size);
         .           }
         .           
         .           static inline void	format_mode_type(char *buffer, t_data *data)
 1,275,456 ( 0.02%)  {
 1,913,184 ( 0.03%)  	char	types[] = {'-', 'd', 'c', 'b', 'p', 'l', 's'};
         .           
 1,594,320 ( 0.02%)  	buffer[0] = types[data->file.type];
   637,728 ( 0.01%)  }
         .           
         .           static inline void	format_mode_user(char *buffer, t_data *data)
 1,275,456 ( 0.02%)  {
 3,188,640 ( 0.04%)  	buffer[1] = (data->file.mode & S_IRUSR) ? 'r' : '-';
 3,188,640 ( 0.04%)  	buffer[2] = (data->file.mode & S_IWUSR) ? 'w' : '-';
         .           
 1,594,320 ( 0.02%)  	if (data->file.mode & S_ISUID)
         .           	{
       330 ( 0.00%)  		buffer[3] = (data->file.mode & S_IXUSR) ? 's' : 'S';
        33 ( 0.00%)  	}
         .           	else
         .           	{
 3,188,310 ( 0.04%)  		buffer[3] = (data->file.mode & S_IXUSR) ? 'x' : '-';
         .           	}
   637,728 ( 0.01%)  }
         .           
         .           static inline void	format_mode_group(char *buffer, t_data *data)
 1,275,456 ( 0.02%)  {
 3,188,640 ( 0.04%)  	buffer[4] = (data->file.mode & S_IRGRP) ? 'r' : '-';
 3,188,640 ( 0.04%)  	buffer[5] = (data->file.mode & S_IWGRP) ? 'w' : '-';
         .           	
 1,594,320 ( 0.02%)  	if (data->file.mode & S_ISGID)
         .           	{
       180 ( 0.00%)  		buffer[6] = (data->file.mode & S_IXGRP) ? 's' : 'S';
        18 ( 0.00%)  	}
         .           	else
         .           	{
 3,188,460 ( 0.04%)  		buffer[6] = (data->file.mode & S_IXGRP) ? 'x' : '-';
         .           	}
   637,728 ( 0.01%)  }
         .           
         .           static inline void	format_mode_other(char *buffer, t_data *data)
 1,275,456 ( 0.02%)  {
 3,188,640 ( 0.04%)  	buffer[7] = (data->file.mode & S_IROTH) ? 'r' : '-';
 3,188,640 ( 0.04%)  	buffer[8] = (data->file.mode & S_IWOTH) ? 'w' : '-';
         .           	
 1,594,320 ( 0.02%)  	if (data->file.mode & S_ISVTX)
         .           	{
        10 ( 0.00%)  		buffer[9] = (data->file.mode & S_IXOTH) ? 't' : 'T';
         1 ( 0.00%)  	}
         .           	else
         .           	{
 3,188,630 ( 0.04%)  		buffer[9] = (data->file.mode & S_IXOTH) ? 'x' : '-';
         .           	}
   637,728 ( 0.01%)  }
         .           
         .           static inline unsigned int	format_mode_xattr(char *buffer, t_data *data, unsigned int size)
 1,594,320 ( 0.02%)  {
 1,913,184 ( 0.03%)  	if (data->xattr == true)
         .           	{
        15 ( 0.00%)  		++size;
        10 ( 0.00%)  		buffer[10] = '+';
         .           	}
         .           	
   956,592 ( 0.01%)  	return (size);
         .           }
         .           
         .           static unsigned int	format_links(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
 2,232,048 ( 0.03%)  	return (ft_itoa_dec(data->links, buffer));
19,477,266 ( 0.27%)  => ???:ft_itoa_dec (318,864x)
         .           }
         .           
         .           static int format_user(t_strategies *strat, char **buffer, unsigned int *len, t_data *data)
 2,232,048 ( 0.03%)  {
   318,864 ( 0.00%)  	int	ret = OK;
         .           
 1,913,184 ( 0.03%)  	ret = get_user_name(strat, buffer, data->uid);
19,776,067 ( 0.27%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/ids.c:get_user_name (318,864x)
 1,594,320 ( 0.02%)  	if (ret == OK && *buffer != NULL)
         .           	{
 1,913,184 ( 0.03%)  		*len = ft_strlen(*buffer);
13,711,176 ( 0.19%)  => ???:ft_strlen (318,864x)
   318,864 ( 0.00%)  	}
         .           	else
         .           	{
         .           		*len = 0;
         .           	}
 1,275,456 ( 0.02%)  	return (ret);
         .           }
         .           
         .           static unsigned int format_user_id(char **buffer, t_data *data)
         .           {
         .           	unsigned int	len = 0;
         .           	*buffer = ft_itoa(data->uid);
         .           	if (buffer != NULL)
         .           	{
         .           		len = ft_strlen(*buffer);
         .           	}
         .           	return (len);
         .           }
         .           
         .           static int format_group(t_strategies *strat, char **buffer, unsigned int *len, t_data *data)
 2,232,048 ( 0.03%)  {
   318,864 ( 0.00%)  	int	ret = OK;
 1,913,184 ( 0.03%)  	ret = get_group_name(strat, buffer, data->gid);
19,793,769 ( 0.27%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/ids.c:get_group_name (318,864x)
 1,594,320 ( 0.02%)  	if (ret == OK && *buffer != NULL)
         .           	{
 1,913,184 ( 0.03%)  		*len = ft_strlen(*buffer);
13,711,376 ( 0.19%)  => ???:ft_strlen (318,864x)
   318,864 ( 0.00%)  	}
         .           	else
         .           	{
         .           		*len = 0;
         .           	}
 1,275,456 ( 0.02%)  	return (ret);
         .           }
         .           
         .           static unsigned int format_group_id(char **buffer, t_data *data)
         .           {
         .           	unsigned int	len = 0;
         .           	*buffer = ft_itoa(data->gid);
         .           	if (buffer != NULL)
         .           	{
         .           		len = ft_strlen(*buffer);
         .           	}
         .           	return (len);
         .           }
         .           
         .           static unsigned int format_size(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
   318,864 ( 0.00%)  	unsigned int	size = 0;
         .           
 1,913,184 ( 0.03%)  	if (!(data->file.type == CHR || data->file.type == BLK))
         .           	{
 1,594,320 ( 0.02%)  		size = ft_itoa_dec(data->total_size, buffer);
51,142,286 ( 0.71%)  => ???:ft_itoa_dec (318,864x)
         .           	}
         .           
 1,275,456 ( 0.02%)  	return (size);
         .           }
         .           
         .           static unsigned int format_minor(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
   318,864 ( 0.00%)  	unsigned int	size = 0;
         .           
 1,913,184 ( 0.03%)  	if (data->file.type == CHR || data->file.type == BLK)
         .           	{
         .           		size = ft_itoa_dec(minor(data->rdev), buffer);
         .           	}
         .           
 1,275,456 ( 0.02%)  	return (size);
         .           }
         .           
         .           static unsigned int format_major(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
   318,864 ( 0.00%)  	unsigned int	size = 0;
         .           
 1,913,184 ( 0.03%)  	if (data->file.type == CHR || data->file.type == BLK)
         .           	{
         .           		size = ft_itoa_dec(major(data->rdev), buffer);
         .           	}
         .           
 1,275,456 ( 0.02%)  	return (size);
         .           }
         .           
         .           static unsigned int format_time(char *buffer, t_data *data)
 1,594,320 ( 0.02%)  {
   318,864 ( 0.00%)  	unsigned int	size = 0;
         .           	
 1,275,456 ( 0.02%)  	char	*time_string = get_time_string(&data->time);
1,746,739,337 (24.26%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/time.c:get_time_string (318,864x)
   637,728 ( 0.01%)  	if (time_string == NULL)
         .           	{
         .           		return 0;
         .           	}
         .           
 1,275,456 ( 0.02%)  	if (recent(time_string))
1,970,751,899 (27.37%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/recent.c:recent (318,864x)
         .           	{
   478,808 ( 0.01%)  		size = format_recent_time(buffer, time_string);
40,818,382 ( 0.57%)  => src/loadformat.c:format_recent_time (119,702x)
   119,702 ( 0.00%)  	}
         .           	else
         .           	{
   796,648 ( 0.01%)  		size = format_late_time(buffer, time_string);
69,507,538 ( 0.97%)  => src/loadformat.c:format_late_time (199,162x)
         .           	}
         .           
   956,596 ( 0.01%)  	free(time_string);
28,383,635 ( 0.39%)  => ./malloc/./malloc/malloc.c:free (318,864x)
       676 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
         .           	
   637,728 ( 0.01%)  	return (size);
 1,275,456 ( 0.02%)  }
         .           
         .           static unsigned int format_recent_time(char *buffer, char *time_string)
   598,510 ( 0.01%)  {
   598,510 ( 0.01%)  	ft_bufferncpy(&buffer[0], &time_string[4], 12);
38,903,150 ( 0.54%)  => ???:ft_bufferncpy (119,702x)
   239,404 ( 0.00%)  	buffer[12] = '\0';
   478,808 ( 0.01%)  	return (12);
         .           }
         .           
         .           static unsigned int format_late_time(char *buffer, char *time_string)
   995,810 ( 0.01%)  {
   995,810 ( 0.01%)  	ft_bufferncpy(&buffer[0], &time_string[4], 7);
39,832,400 ( 0.55%)  => ???:ft_bufferncpy (199,162x)
 1,194,972 ( 0.02%)  	ft_bufferncpy(&buffer[8], &time_string[20], 4);
24,895,250 ( 0.35%)  => ???:ft_bufferncpy (199,162x)
   398,324 ( 0.01%)  	buffer[7]= ' ';
   398,324 ( 0.01%)  	buffer[12] = '\0';
   796,648 ( 0.01%)  	return (12);
         .           }
         .           
         .           unsigned int	format_name(char **buffer, t_data *data)
 1,594,320 ( 0.02%)  {
 1,275,456 ( 0.02%)  	*buffer = data->file.name;
 1,913,184 ( 0.03%)  	return (ft_strlen(*buffer));
40,308,552 ( 0.56%)  => ???:ft_strlen (318,864x)
         .           }
         .           
         .           static void	format_symlink(char **buffer, t_data *data)
 1,275,456 ( 0.02%)  {
 1,275,456 ( 0.02%)  	*buffer = data->target.name;
   637,728 ( 0.01%)  }
         .           
         .           static void set_max_size(unsigned int *max, unsigned int size)
11,612,476 ( 0.16%)  {
11,612,476 ( 0.16%)  	if (size > *max)
         .           	{
   797,382 ( 0.01%)  		*max = size;
         .           	}
 5,806,238 ( 0.08%)  }
         .           

--------------------------------------------------------------------------------
-- Auto-annotated source: src/data.c
--------------------------------------------------------------------------------
Ir                 

-- line 10 ----------------------------------------
        .           /*                                                                            */
        .           /* ************************************************************************** */
        .           
        .           #include "ft_ls.h"
        .           
        .           static  int			add_data_path(t_data *data, char const * const name, char const * const path);
        .           
        .           t_data	*add_new_data(t_list **lst, char const * const name, char const * const path, void (*lstadd)(t_list**, t_list*))
2,232,055 ( 0.03%)  {
  318,865 ( 0.00%)  	t_data  *data = NULL;
  318,865 ( 0.00%)  	t_list  *newlst = NULL;
        .           
1,594,325 ( 0.02%)  	if ((data = new_data()) == NULL || \
72,188,726 ( 1.00%)  => src/data.c:new_data (318,865x)
1,913,190 ( 0.03%)  		(data->file.name = ft_pathdup(name)) == NULL || \
177,966,615 ( 2.47%)  => ???:ft_pathdup (318,865x)
2,232,055 ( 0.03%)  		(add_data_path(data, data->file.name, path)) != OK || \
506,657,443 ( 7.04%)  => src/data.c:add_data_path (318,865x)
1,275,460 ( 0.02%)  		(newlst = ft_lstnew(data)) == NULL)
64,619,250 ( 0.90%)  => ???:ft_lstnew (318,865x)
        .           	{
        .           		data_del(data);
        .           		data = NULL;
        .           	}
        .           	else
        .           	{
1,275,460 ( 0.02%)  		lstadd(lst, newlst);
5,609,722 ( 0.08%)  => ???:ft_lstadd_front (318,865x)
        .           	}
1,275,460 ( 0.02%)  	return (data);
        .           }
        .           
        .           static  int add_data_path(t_data *data, char const * const name, char const * const path)
1,913,190 ( 0.03%)  {
  318,865 ( 0.00%)  	int ret = OK;
  637,730 ( 0.01%)  	if (path == NULL)
        .           	{
        5 ( 0.00%)  		data->path = ft_strdup(name);
      330 ( 0.00%)  => ???:ft_strdup (1x)
        1 ( 0.00%)  	}
        .           	else
        .           	{
2,232,048 ( 0.03%)  		data->path = ft_pathjoin(path, data->file.name);
499,323,219 ( 6.93%)  => ???:ft_pathjoin (318,864x)
        .           	}
  956,595 ( 0.01%)  	if (data->path == NULL)
        .           	{
        .           		ret = INTERNAL_KO;
        .           	}
1,275,460 ( 0.02%)  	return (ret);
        .           }
        .           
        .           t_data  *new_data()
  956,595 ( 0.01%)  {
  956,595 ( 0.01%)  	t_data *data = ft_malloc(sizeof(t_data));
63,898,236 ( 0.89%)  => ???:ft_malloc (318,865x)
  637,730 ( 0.01%)  	if (data != NULL)
        .           	{
  637,730 ( 0.01%)  		data->file.name = NULL;
  637,730 ( 0.01%)  		data->path = NULL;
  637,730 ( 0.01%)  		data->target.name = NULL;
  637,730 ( 0.01%)  		data->target.type = -1;
  637,730 ( 0.01%)  		data->target.mode = -1;
  637,730 ( 0.01%)  		data->file.broken = false;
  637,730 ( 0.01%)  		data->target.broken = false;
        .           	}
1,275,460 ( 0.02%)  	return (data);
        .           }
        .           
        .           void  data_del(void *v_data)
1,275,460 ( 0.02%)  {
  637,730 ( 0.01%)  	if (v_data != NULL)
        .           	{
  637,730 ( 0.01%)  		t_data  *data = (t_data*)v_data;
1,275,460 ( 0.02%)  		free(data->file.name);
33,712,068 ( 0.47%)  => ./malloc/./malloc/malloc.c:free (318,865x)
1,275,460 ( 0.02%)  		free(data->path);
33,158,671 ( 0.46%)  => ./malloc/./malloc/malloc.c:free (318,865x)
1,275,460 ( 0.02%)  		free(data->target.name);
4,417,512 ( 0.06%)  => ./malloc/./malloc/malloc.c:free (318,865x)
  956,595 ( 0.01%)  		free(data);
40,975,216 ( 0.57%)  => ./malloc/./malloc/malloc.c:free (318,865x)
        .           	}
  956,595 ( 0.01%)  }
        .           
        .           bool	is_directory_simple(t_data *data)
        3 ( 0.00%)  {
        1 ( 0.00%)  	int	ret = false;
        .           	
        3 ( 0.00%)  	if(data->file.type == DIREC || (data->file.type == LNK && data->target.type == DIREC))
        .           	{
        1 ( 0.00%)  		ret = true;
        .           	}
        6 ( 0.00%)  	return (ret);
        .           }
        .           
        .           bool	is_directory_longlist(t_data *data)
        .           {
        .           	int	ret = false;
        .           
        .           	if(data->file.type == DIREC)
        .           	{
-- line 99 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: src/ids.c
--------------------------------------------------------------------------------
Ir                 

-- line 11 ----------------------------------------
        .           /* ************************************************************************** */
        .           
        .           #include "ft_ls.h"
        .           
        .           static int	getpw_username(uid_t id, char **name);
        .           static int	getgr_groupname(gid_t id, char **name);
        .           
        .           void  init_ids(t_strategies *strat)
        4 ( 0.00%)  {
        3 ( 0.00%)  	init_dict(strat->users);
    4,616 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:init_dict (1x)
        3 ( 0.00%)  	init_dict(strat->groups);
    4,616 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:init_dict (1x)
        3 ( 0.00%)  }
        .           
        .           void  free_ids(t_strategies *strat)
        4 ( 0.00%)  {
        3 ( 0.00%)  	free_dict(strat->users);
    6,406 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:free_dict (1x)
        3 ( 0.00%)  	free_dict(strat->groups);
   10,990 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:free_dict (1x)
        3 ( 0.00%)  }
        .           
        .           int	get_user_name(t_strategies *strat, char **name, uid_t id)
1,913,184 ( 0.03%)  {
  318,864 ( 0.00%)  	int	ret = OK;
2,232,048 ( 0.03%)  	*name = get_value_by_key(strat->users, id);
13,073,402 ( 0.18%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:get_value_by_key (318,864x)
        .           
  956,592 ( 0.01%)  	if (*name == NULL)
        .           	{
        8 ( 0.00%)  		ret = getpw_username(id, name);
    5,399 ( 0.00%)  => src/ids.c:getpw_username (2x)
        6 ( 0.00%)  		if (*name != NULL)
        .           		{
       16 ( 0.00%)  			if (insert_key(strat->users, id, *name) == INTERNAL_KO)
    1,088 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:insert_key (2x)
        .           			{
        .           				free(*name);
        .           				ret = INTERNAL_KO;
        .           			}
        2 ( 0.00%)  		}
        2 ( 0.00%)  	}
        .           
1,275,456 ( 0.02%)  	return (ret);
        .           }
        .           
        .           int	get_group_name(t_strategies *strat, char **name, gid_t id)
1,913,184 ( 0.03%)  {
  318,864 ( 0.00%)  	int	ret = OK;
        .           
2,232,048 ( 0.03%)  	*name = get_value_by_key(strat->groups, id);
13,073,270 ( 0.18%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:get_value_by_key (318,864x)
        .           
  956,592 ( 0.01%)  	if (*name == NULL)
        .           	{
       56 ( 0.00%)  		ret = getgr_groupname(id, name);
   17,115 ( 0.00%)  => src/ids.c:getgr_groupname (14x)
       42 ( 0.00%)  		if (*name != NULL)
        .           		{
      112 ( 0.00%)  			if (insert_key(strat->groups, id, *name))
    7,002 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/dictionnary.c:insert_key (14x)
        .           			{
        .           				free(*name);
        .           				ret = INTERNAL_KO;
        .           			}
       14 ( 0.00%)  		}
       14 ( 0.00%)  	}
        .           
1,275,456 ( 0.02%)  	return (ret);
        .           }
        .           
        .           static int	getpw_username(uid_t id, char **name)
       10 ( 0.00%)  {
        2 ( 0.00%)  	int	ret = OK;
        .           
        4 ( 0.00%)  	*name = NULL;
        6 ( 0.00%)  	errno = 0;
        8 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (2x)
        .           
       12 ( 0.00%)  	struct passwd	*psw = getpwuid(id);
    3,751 ( 0.00%)  => ./pwd/../nss/getXXbyYY.c:getpwuid (2x)
      711 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
        4 ( 0.00%)  	if (psw == NULL)
        .           	{
        .           		if (errno != 0)
        .           		{
        .           			perror("ft_ls: getpwuid: ");
        .           			ret = MAJOR_KO;
        .           		}
        .           	}
        .           	else
        .           	{
       12 ( 0.00%)  		*name = ft_strdup(psw->pw_name);
      863 ( 0.00%)  => ???:ft_strdup (2x)
        6 ( 0.00%)  		if (*name == NULL)
        .           		{
        .           			ret = INTERNAL_KO;
        .           		}
        .           	}
        .           
        8 ( 0.00%)  	return (ret);
        .           }
        .           
        .           static int	getgr_groupname(gid_t id, char **name)
       70 ( 0.00%)  {
       14 ( 0.00%)  	int		ret = OK;
        .           	
       28 ( 0.00%)  	*name = NULL;
       42 ( 0.00%)  	errno = 0;
       56 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (14x)
        .           
       60 ( 0.00%)  	struct group *grp = getgrgid(id);
   10,913 ( 0.00%)  => ./grp/../nss/getXXbyYY.c:getgrgid (14x)
      702 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
       28 ( 0.00%)  	if (grp == NULL)
        .           	{
        .           		if (errno != 0)
        .           		{
        .           			ret = MAJOR_KO;
        .           			perror("ft_ls: getgrgid: ");
        .           		}
        .           	}
        .           	else
        .           	{
       84 ( 0.00%)  		*name = ft_strdup(grp->gr_name);
    5,006 ( 0.00%)  => ???:ft_strdup (14x)
       42 ( 0.00%)  		if (*name == NULL)
        .           		{
        .           			ret = INTERNAL_KO;
        .           		}
        .           	}
        .           
       56 ( 0.00%)  	return (ret);
        .           }

       16 ( 0.00%)  <counts for unidentified lines in src/ids.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/stats.c
--------------------------------------------------------------------------------
Ir                 

-- line 13 ----------------------------------------
        .           #include "ft_ls.h"
        .           
        .           static int	set_type(t_data *data);
        .           static int	get_type(mode_t	mode);
        .           static int	add_xattr(t_data *data);
        .           static int	set_symlink_type(t_data *data);
        .           
        .           int	add_all_stats(t_strategies *strat, t_list *all_paths)
        5 ( 0.00%)  {
        1 ( 0.00%)  	int		ret = OK;
        1 ( 0.00%)  	t_data	*data = NULL;
        .           
        5 ( 0.00%)  	while (all_paths != NULL)
        .           	{
        3 ( 0.00%)  		data = (t_data*)all_paths->content;
        .           
        4 ( 0.00%)  		ret = add_stats(strat, data);
    1,530 ( 0.00%)  => src/stats.c:add_stats (1x)
        2 ( 0.00%)  		if (ret != OK)
        .           		{
        .           			break;
        .           		}
        .           		
        4 ( 0.00%)  		ret = compute_stats(strat, data);
       66 ( 0.00%)  => src/stats.c:compute_stats (1x)
        2 ( 0.00%)  		if (ret != OK)
        .           		{
        .           			break;
        .           		}
        .           		
        3 ( 0.00%)  		if (data->file.type == LNK)
        .           		{
        .           			ret = add_symlink(data);
        .           		}
        .           		
        3 ( 0.00%)  		all_paths = all_paths->next;
        .           	}
        .           
        4 ( 0.00%)  	return (ret);
        .           }
        .           
        .           int add_stats(t_strategies *strat, t_data *data)
1,594,325 ( 0.02%)  {
  318,865 ( 0.00%)  	int			ret = OK;
        .           	struct stat	stat_buffer;
        .           		
  956,595 ( 0.01%)  	errno = 0;
1,275,460 ( 0.02%)  => ./csu/./csu/errno-loc.c:__errno_location (318,865x)
2,232,059 ( 0.03%)  	if (lstat(data->path, &stat_buffer) != 0)
4,464,110 ( 0.06%)  => ./io/../sysdeps/unix/sysv/linux/lstat64.c:lstat (318,865x)
      731 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
        .           	{
        .           		ret = MAJOR_KO;
        .           		ft_putstr_fd("ft_ls: lstat: ", 2);
        .           		perror(data->path);
        .           	}
        .           	else
        .           	{
  956,595 ( 0.01%)  		data->dev = stat_buffer.st_dev;
  956,595 ( 0.01%)  		data->rdev = stat_buffer.st_rdev;
  956,595 ( 0.01%)  		data->links = stat_buffer.st_nlink;
  956,595 ( 0.01%)  		data->file.mode = stat_buffer.st_mode;
  956,595 ( 0.01%)  		data->uid = stat_buffer.st_uid;
  956,595 ( 0.01%)  		data->gid = stat_buffer.st_gid;
  956,595 ( 0.01%)  		data->total_size = stat_buffer.st_size;
  956,595 ( 0.01%)  		data->block_size = stat_buffer.st_blksize;
  956,595 ( 0.01%)  		data->block_nb = stat_buffer.st_blocks;
1,913,190 ( 0.03%)  		data->time = strat->settime(&stat_buffer);
2,232,055 ( 0.03%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/time.c:last_modif (318,865x)
        .           	}
  956,595 ( 0.01%)  	ret = add_xattr(data);
12,961,607 ( 0.18%)  => src/stats.c:add_xattr (318,865x)
        .           
1,275,460 ( 0.02%)  	return (ret);
        .           }
        .           
        .           static int  add_xattr(t_data *data)
1,275,460 ( 0.02%)  {
  318,865 ( 0.00%)  	int	ret = OK;
        .           
  956,595 ( 0.01%)  	errno = 0;
1,275,460 ( 0.02%)  => ./csu/./csu/errno-loc.c:__errno_location (318,865x)
2,550,924 ( 0.04%)  	ssize_t	xattr_len = listxattr(data->path, NULL, 0);
1,950,706 ( 0.03%)  => ./misc/../sysdeps/unix/syscall-template.S:listxattr (318,865x)
      670 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  637,730 ( 0.01%)  	if (xattr_len < 0)
        .           	{
   28,137 ( 0.00%)  		ret = xattr_error(data);	
  187,580 ( 0.00%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/errors.c:xattr_error (9,379x)
   18,758 ( 0.00%)  		data->xattr = false;
    9,379 ( 0.00%)  	}
1,237,944 ( 0.02%)  	else if (xattr_len == 16 || xattr_len == 0)
        .           	{
  618,962 ( 0.01%)  		data->xattr = false;
  309,481 ( 0.00%)  	}
        .           	else
        .           	{
       10 ( 0.00%)  		data->xattr = true;
        .           	}
        .           
1,275,460 ( 0.02%)  	return (ret); 
        .           }
        .           
        .           int  compute_stats(t_strategies *strat, t_data *data)
1,594,325 ( 0.02%)  {
        .           	(void)strat;
1,594,325 ( 0.02%)  	return(set_type(data));
16,401,723 ( 0.23%)  => src/stats.c:set_type (318,865x)
        .           }
        .           
        .           static int set_type(t_data *data)
1,275,460 ( 0.02%)  {
  318,865 ( 0.00%)  	int	ret = OK;
        .           
1,913,190 ( 0.03%)  	data->file.type = get_type(data->file.mode);
10,662,153 ( 0.15%)  => src/stats.c:get_type (318,865x)
        .           
  956,595 ( 0.01%)  	if (data->file.type == ERROR_TYPE)
        .           	{
        .           		ft_putstr_fd("ft_ls: ", 2);
        .           		ft_putstr_fd(data->file.name, 2);
        .           		ft_putstr_fd(": invalid file type\n", 2);
        .           		ret = MAJOR_KO;
        .           	}
1,275,460 ( 0.02%)  	return (ret); 
        .           }
        .           
        .           static int	get_type(mode_t	mode)
1,020,423 ( 0.01%)  {
2,721,128 ( 0.04%)  	mode_t const modes[] = {S_IFREG, S_IFDIR, S_IFCHR, S_IFBLK, S_IFIFO, S_IFLNK, S_IFSOCK};
1,020,423 ( 0.01%)  	mode &= S_IFMT;
        .           
2,144,391 ( 0.03%)  	for (int i = 0; i < MODES_NB; ++i)
        .           	{
2,109,876 ( 0.03%)  		if(mode == modes[i])
        .           		{
1,020,423 ( 0.01%)  			return (i);
        .           		}
  187,328 ( 0.00%)  	}
        .           	
        .           	return (ERROR_TYPE);
1,020,423 ( 0.01%)  }
        .           
        .           int	add_symlink(t_data *data)
  122,620 ( 0.00%)  {
   30,655 ( 0.00%)  	int	ret = OK;
        .           	
  245,240 ( 0.00%)  	data->target.name = ft_malloc(sizeof(char) * (data->total_size + 1));
6,074,533 ( 0.08%)  => ???:ft_malloc (30,655x)
   91,965 ( 0.00%)  	if (data->target.name == NULL)
        .           	{
        .           		return (INTERNAL_KO);
        .           	}
        .           
   91,965 ( 0.00%)  	errno = 0;
  122,620 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (30,655x)
  275,899 ( 0.00%)  	ssize_t	size = readlink(data->path, data->target.name, data->total_size);
  183,930 ( 0.00%)  => ./io/../sysdeps/unix/syscall-template.S:readlink (30,655x)
      685 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  183,930 ( 0.00%)  	if (size < 0 || size != (ssize_t)data->total_size)
        .           	{
        .           		perror("ft_ls: readlink: ");
        .           		return (MAJOR_KO);
        .           	}
        .           
  153,275 ( 0.00%)  	data->target.name[data->total_size] = '\0';
   91,965 ( 0.00%)  	ret = set_symlink_type(data);
2,131,959 ( 0.03%)  => src/stats.c:set_symlink_type (30,655x)
        .           
   61,310 ( 0.00%)  	return (ret);
  122,620 ( 0.00%)  }
        .           
        .           static int	set_symlink_type(t_data *data)
  122,620 ( 0.00%)  {
   30,655 ( 0.00%)  	int			ret = OK;
        .           	struct stat	stat_buffer;
        .               
   91,965 ( 0.00%)  	errno = 0;
  122,620 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (30,655x)
  214,589 ( 0.00%)  	if (stat(data->path, &stat_buffer) != 0)
  457,307 ( 0.01%)  => ./io/../sysdeps/unix/sysv/linux/stat64.c:stat (30,655x)
      703 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
        .           	{
   37,516 ( 0.00%)  		if (errno == ENOENT)
   37,516 ( 0.00%)  => ./csu/./csu/errno-loc.c:__errno_location (9,379x)
        .           		{
   18,758 ( 0.00%)  			data->target.type = ERROR_TYPE;
   18,758 ( 0.00%)  			data->file.broken = true;
    9,379 ( 0.00%)  		}
        .           		else
        .           		{
        .           			ret = MAJOR_KO;
        .           			ft_putstr_fd("ft_ls: stat: ", 2);
        .           			perror(data->path);
        .           		}
    9,379 ( 0.00%)  	}
        .           	else 
        .           	{
  106,380 ( 0.00%)      	data->target.type = get_type(stat_buffer.st_mode);
  582,262 ( 0.01%)  => src/stats.c:get_type (21,276x)
   63,828 ( 0.00%)  		data->target.mode = stat_buffer.st_mode;
   63,828 ( 0.00%)  		if (data->target.type == ERROR_TYPE)
        .           		{
        .           			ft_putstr_fd("ft_ls: ", 2);
        .           			ft_putstr_fd(data->file.name, 2);
        .           			ft_putstr_fd(": invalid file type\n", 2);
        .           			ret = MAJOR_KO;
        .           		}
        .           	}
  122,620 ( 0.00%)  	return (ret);
        .           }

  330,762 ( 0.00%)  <counts for unidentified lines in src/stats.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/printformat.c
--------------------------------------------------------------------------------
Ir                 

-- line 18 ----------------------------------------
        .           static unsigned int	print_format_size(char *dest, t_format_data *format_data, t_format_sizes *format_sizes, unsigned int offset);
        .           static unsigned int	print_format_device(char *dest, t_format_data *format_data, t_format_sizes *format_sizes, unsigned int offset);
        .           static unsigned int	print_format_date(char *dest, t_format_data *format_data, t_format_sizes *format_sizes, unsigned int offset);
        .           static unsigned int	print_format_long_ending(char *dest, t_format_data *format_data, unsigned int offset);
        .           static void			print_format_symlink(t_format_data *format_data);
        .           //static unsigned int	get_end_pos(t_format_sizes *format_sizes);
        .           
        .           int	print_all_format_data(t_strategies *strat, t_directory *dir, t_format_sizes *format_sizes, t_format_data *all_format_data)
  233,401 ( 0.00%)  {
2,717,627 ( 0.04%)  	for (unsigned int i = 0; i < dir->entry_nb; ++i)
        .           	{
2,869,776 ( 0.04%)  		strat->printformat(strat, &all_format_data[i], format_sizes);
1,324,820,085 (18.40%)  => src/printformat.c:print_format_data_short (318,864x)
        .           	}
        .           
  133,372 ( 0.00%)  	return (OK);
        .           }
        .           
        .           int	print_format_data_short(t_strategies *strat, t_format_data *format_data, t_format_sizes *format_sizes)
1,913,184 ( 0.03%)  {
        .           	(void)strat;
        .           	(void)format_sizes;
        .           
  318,864 ( 0.00%)  	unsigned int	offset = 0;
        .           	char			buffer[280];
        .           
1,275,456 ( 0.02%)  	ft_memset(buffer, ' ', 280);
1,075,847,136 (14.94%)  => ???:ft_memset (318,864x)
        .           
1,913,184 ( 0.03%)  	offset += print_format_color(buffer, format_data, offset);
76,208,496 ( 1.06%)  => src/printformat.c:print_format_color (318,864x)
1,913,184 ( 0.03%)  	offset += print_format_name(buffer, format_data, offset);
119,195,301 ( 1.66%)  => src/printformat.c:print_format_name (318,864x)
1,594,320 ( 0.02%)  	offset += print_format_color_reset(buffer, offset);
27,741,168 ( 0.39%)  => src/printformat.c:print_format_color_reset (318,864x)
1,594,320 ( 0.02%)  	offset += print_format_short_ending(buffer, offset);
5,420,688 ( 0.08%)  => src/printformat.c:print_format_short_ending (318,864x)
        .           
1,913,184 ( 0.03%)  	write(1, buffer, offset);
2,869,776 ( 0.04%)  => ./io/../sysdeps/unix/sysv/linux/write.c:write (318,864x)
1,913,184 ( 0.03%)  	if (format_data->align_user_left == false)
        .           	{
        .           		free(format_data->user);
        .           		format_data->name = NULL;
        .           	}
1,913,184 ( 0.03%)  	if (format_data->align_group_left == false)
        .           	{
        .           		free(format_data->group);
        .           		format_data->group = NULL;
        .           	}
        .           
1,275,456 ( 0.02%)  	return (OK);
        .           }
        .           
        .           int	print_format_data_long(t_strategies *strat, t_format_data *format_data, t_format_sizes *format_sizes)
        .           {
        .           	unsigned int	offset = 0;
        .           	char			buffer[1024];
        .           
        .           	ft_memset(buffer, ' ', 1024);
-- line 70 ----------------------------------------
-- line 194 ----------------------------------------
        .           
        .           static unsigned int	print_format_date(char *dest, t_format_data *format_data, t_format_sizes *format_sizes, unsigned int offset)
        .           {
        .           	ft_buffercpy(&dest[offset], format_data->date);
        .           	return (format_sizes->date + 1);
        .           }
        .           
        .           unsigned int	print_format_color(char *dest, t_format_data *format_data, unsigned int offset)
1,913,184 ( 0.03%)  {
        .           
1,275,456 ( 0.02%)  	const char *color = get_color_str(format_data->color);
3,507,504 ( 0.05%)  => /mnt/nfs/homes/rertzer/projets/ft_ls/ft_ls_git/src/color.c:get_color_str (318,864x)
        .           
1,594,320 ( 0.02%)  	ft_buffercpy(&dest[offset], color);
42,408,912 ( 0.59%)  => ???:ft_buffercpy (318,864x)
        .           
1,594,320 ( 0.02%)  	return (ft_strlen(color));
23,914,800 ( 0.33%)  => ???:ft_strlen (318,864x)
        .           }
        .           
        .           unsigned int	print_format_name(char *dest, t_format_data *format_data, unsigned int offset)
1,913,184 ( 0.03%)  {
1,913,184 ( 0.03%)  	ft_buffercpy(&dest[offset], format_data->name);
73,147,197 ( 1.02%)  => ???:ft_buffercpy (318,864x)
1,913,184 ( 0.03%)  	return (ft_strlen(format_data->name));
40,308,552 ( 0.56%)  => ???:ft_strlen (318,864x)
        .           }
        .           
        .           unsigned int	print_format_color_reset(char *dest, unsigned int offset)
1,594,320 ( 0.02%)  {
1,594,320 ( 0.02%)  	ft_buffercpy(&dest[offset], RESET);
23,277,072 ( 0.32%)  => ???:ft_buffercpy (318,864x)
        .           
1,275,456 ( 0.02%)  	return (RESET_SIZE);
        .           }
        .           
        .           unsigned int	print_format_short_ending(char *dest, unsigned int offset)
1,275,456 ( 0.02%)  {
  318,864 ( 0.00%)  	int	shift = 0;
        .           
  956,592 ( 0.01%)  	dest[offset] = '\n';
1,594,320 ( 0.02%)  	dest[offset + 1] = '\0';
  318,864 ( 0.00%)  	shift = 2;
        .           
  956,592 ( 0.01%)  	return (shift);
        .           }
        .           
        .           static unsigned int	print_format_long_ending(char *dest, t_format_data *format_data, unsigned int offset)
        .           {
        .           	int	shift = 0;
        .           
        .           	if (format_data->mode[0] == 'l')
        .           	{
-- line 240 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./csu/./csu/errno-loc.c
  ./dirent/../sysdeps/unix/sysv/linux/readdir64.c
  ./io/../sysdeps/unix/sysv/linux/fstatat64.c
  ./io/../sysdeps/unix/sysv/linux/stat64.c
  ./libio/./libio/genops.c
  ./libio/./libio/iopadn.c
  ./libio/./libio/libioP.h
  ./libio/./libio/strops.c
  ./libio/./libio/vsnprintf.c
  ./malloc/./malloc/arena.c
  ./malloc/./malloc/malloc.c
  ./stdio-common/../libio/libioP.h
  ./stdio-common/./stdio-common/_itoa.c
  ./stdio-common/./stdio-common/printf-parse.h
  ./stdio-common/./stdio-common/snprintf.c
  ./stdio-common/./stdio-common/vfprintf-internal.c
  ./stdlib/./stdlib/getenv.c
  ./string/../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strchr-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S
  ./string/./string/strdup.c
  ./time/./time/asctime.c
  ./time/./time/ctime.c
  ./time/./time/offtime.c
  ./time/./time/tzfile.c
  ./time/./time/tzset.c

--------------------------------------------------------------------------------
Ir                   
--------------------------------------------------------------------------------
845,124,460 (11.74%)  events annotated

